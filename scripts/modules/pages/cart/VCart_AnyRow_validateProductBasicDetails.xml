<?xml version="1.0" encoding="UTF-8"?>
<scriptmodule xmlns="http://xlt.xceptance.com/xlt-script/2" version="6">
  <tags>workaround</tags>
  <description>Validate all rows with product name, number, quantity and price sales. It is a basic validation which should work for all kind of product variations. Important difference to VCart_Row_validateProductBasicDetails is that it does not insists on a certain row. It just checks that the item is in the cart.</description>
  <parameter name="productName" desc="product name"/>
  <parameter name="productNumber" desc="product number"/>
  <parameter name="productQuantity" desc="product quantity"/>
  <parameter name="productPriceSales" desc="product price sales"/>
  <codecomment>Validate product basic details (name, number, quantity, price sales)</codecomment>
  <command name="assertText" target="xpath=id('cart-table')//tr[.//div[@class='sku']/span[. =  '@{productNumber}']]//div[@class='name']" value="@{productName}"/>
  <command name="assertText" target="xpath=id('cart-table')//tr[.//div[@class='sku']/span[. =  '@{productNumber}']]//div[@class='sku']/span[@class='value']" value="@{productNumber}"/>
  <command name="assertValue" target="xpath=id('cart-table')//tr[.//div[@class='sku']/span[. =  '@{productNumber}']]//td[@class='item-quantity']/input" value="@{productQuantity}"/>
  <command name="assertText" target="xpath=id('cart-table')//tr[.//div[@class='sku']/span[. =  '@{productNumber}']]//span[@class='price-sales']" value="@{productPriceSales}"/>
</scriptmodule>