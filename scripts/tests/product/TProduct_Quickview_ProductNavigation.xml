<?xml version="1.0" encoding="UTF-8"?>
<testcase xmlns="http://xlt.xceptance.com/xlt-script/2" version="6">
  <tags>qv,quickview,navigation</tags>
  <description>Verifies product navigation on quickview

# 1. Setup and preparation

- start session, open homepage and delete all visible cookies
- search products
- refine by color
- sort by randomly

# 2. Scope of test
- store some product positions and names used for validation of navigation
- open quickview for first product
- navigate to next quickview product
- close quickview
- open quickview for last product
- navigate to previous product
</description>
  <codecomment># Setup - Start Session</codecomment>
  <module name="modules.helper.FHelper_Session_flowToStartSession"/>
  <action name="SearchProducts"/>
  <module name="modules.pages.search.MSearch_enterTextAndSubmit">
    <parameter name="searchText" value="${searchText}"/>
  </module>
  <action name="RefineColorByLabel"/>
  <module name="modules.pages.catalog.MCatalog_Refinement_clickColorByLabel">
    <parameter name="colorLabel" value="${colorLabel}"/>
    <parameter name="breadcrumbRefinementValueCount" value="1"/>
  </module>
  <action name="SelectSortByViaRandom"/>
  <module name="modules.pages.catalog.MCatalog_Option_selectSortByRandomly">
    <parameter name="sortByLabel_varName" value="sortByLabel_random"/>
  </module>
  <codecomment># Scope</codecomment>
  <codecomment>store product positions of last and before last from search result items</codecomment>
  <command name="storeElementCount" target="css=#search-result-items .grid-tile" value="positionLastProduct_varDynamic"/>
  <command name="storeEval" target="${positionLastProduct_varDynamic}-1" value="positionLastBeforeProduct_varDynamic"/>
  <codecomment>store product names of first, second, last and before last</codecomment>
  <command name="storeText" target="css=#search-result-items .grid-tile:nth-of-type(1) .product-name" value="productNameFirst_varDynamic"/>
  <command name="storeText" target="css=#search-result-items .grid-tile:nth-of-type(2) .product-name" value="productNameSecond_varDynamic"/>
  <command name="storeText" target="css=#search-result-items .grid-tile:nth-of-type(${positionLastProduct_varDynamic}) .product-name" value="productNameLast_varDynamic"/>
  <command name="storeText" target="css=#search-result-items .grid-tile:nth-of-type(${positionLastBeforeProduct_varDynamic}) .product-name" value="productNameLastBefore_varDynamic"/>
  <action name="ProductQuickView"/>
  <codecomment>open quickview first product, validate name and button states</codecomment>
  <module name="modules.pages.catalog.MCatalog_clickQuickViewByProductPosition">
    <parameter name="position" value="1"/>
  </module>
  <command name="waitForText" target="css=#pdpMain .product-name" value="${productNameFirst_varDynamic}"/>
  <module name="modules.pages.product.productquickview.VProductQV_validateHeader">
    <parameter name="prevButtonState" value="[disabled='disabled']"/>
    <parameter name="nextButtonState" value=":not([disabled])"/>
  </module>
  <action name="ProductQuickViewNext"/>
  <codecomment>navigate to next quickview product, validate name and button states</codecomment>
  <module name="modules.pages.product.productquickview.MProductQV_clickNext"/>
  <command name="waitForText" target="css=#pdpMain .product-name" value="${productNameSecond_varDynamic}"/>
  <module name="modules.pages.product.productquickview.VProductQV_validateHeader">
    <parameter name="prevButtonState" value=":not([disabled])"/>
    <parameter name="nextButtonState" value=":not([disabled])"/>
  </module>
  <action name="ProductQuickViewClose"/>
  <codecomment>close quickview</codecomment>
  <module name="modules.pages.product.productquickview.MProductQV_closeQuickview"/>
  <action name="ProductQuickView"/>
  <codecomment>open quickview last product, validate name and button states</codecomment>
  <module name="modules.pages.catalog.MCatalog_clickQuickViewByProductPosition">
    <parameter name="position" value="${positionLastProduct_varDynamic}"/>
  </module>
  <command name="waitForText" target="css=#pdpMain .product-name" value="${productNameLast_varDynamic}"/>
  <module name="modules.pages.product.productquickview.VProductQV_validateHeader">
    <parameter name="prevButtonState" value=":not([disabled])"/>
    <parameter name="nextButtonState" value="[disabled='disabled']"/>
  </module>
  <action name="ProductQuickViewPrevious"/>
  <codecomment>open quickview previous product, validate name and button states</codecomment>
  <module name="modules.pages.product.productquickview.MProductQV_clickPrev"/>
  <command name="waitForText" target="css=#pdpMain .product-name" value="${productNameLastBefore_varDynamic}"/>
  <module name="modules.pages.product.productquickview.VProductQV_validateHeader">
    <parameter name="prevButtonState" value=":not([disabled])"/>
    <parameter name="nextButtonState" value=":not([disabled])"/>
  </module>
</testcase>